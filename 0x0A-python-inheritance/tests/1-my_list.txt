This module defines a class ``MyList`` that inherits from the inbuilt type ``list``

It returns an empty list when instatntiated with no agrguments.

::

	>>> MyList = __import__('1-my_list').MyList
	>>> my_list = MyList()
	>>> print(my_list)
	[]

::

It can take one argument and it must be a list.

;;

	>>> my_list = MyList([1, 2, 3, 4])
	>>> print(my_list)
	[1, 2, 3, 4]

::

It also utilizes methods of the class ``list``

::

	>>> my_list = MyList()
	>>> my_list.append(1)
	>>> my_list.append(2)
	>>> my_list.append(3)
	>>> print(my_list)
	[1, 2, 3]

::

If more tham one arguments are passed, a ``TypeError`` is raised.

::

	>>> my_list = MyList([6, 9], [5, 7], [9, 3])
	Traceback (most recent call last):
		...
	TypeError: list expected at most 1 argument, got 3

::

``print_sorted(self)`` is a public instance method of ``MyList`` that prints a sorted list.

::

	>>> my_list = MyList()
	>>> my_list.append(1)
	>>> my_list.append(4)
	>>> my_list.append(2)
	>>> my_list.append(3)
	>>> my_list.append(5)
	>>> print(my_list)
	[1, 4, 2, 3, 5]
	>>> my_list.print_sorted()
	[1, 2, 3, 4, 5]
	>>> print(my_list)
	[1, 4, 2, 3, 5]

::

Although it prints out the sorted versio of the list, this doesn't alter the list itself.
